// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Users {
  id             String         @id @default(cuid())
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  email          String         @unique
  username       String         @unique
  hashedPassword String
  reviews        Reviews[]
  orderHistory   OrderHistory[]
}

model CoffeeProducts {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  name          String
  image         String
  notes         String
  reviews       Reviews[]
  price         Prices?
  coffeeProfile CoffeeProfiles?
  OrderItems    OrderItems[]
}

model Prices {
  id              Int             @id @default(autoincrement())
  regular         Int
  large           Int
  coffeeProductId String          @unique
  coffeeProduct   CoffeeProducts? @relation(fields: [coffeeProductId], references: [id])
}

model Reviews {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  rating          Int
  comment         String
  coffeeProductId String
  coffeeProduct   CoffeeProducts @relation(fields: [coffeeProductId], references: [id])
  User            Users?         @relation(fields: [userId], references: [id])
  userId          String?
}

model CoffeeProfiles {
  id              Int             @id @default(autoincrement())
  type            String
  strength        String
  origin          String
  flavour         String
  coffeeProductId String          @unique
  coffeeProduct   CoffeeProducts? @relation(fields: [coffeeProductId], references: [id])
}

model OrderHistory {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  userId     String
  User       Users        @relation(fields: [userId], references: [id])
  OrderItems OrderItems[]
  // isFullfilled Boolean
  // isShipped    Boolean
  // total        Int
}

model OrderItems {
  id         String       @id @default(cuid())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  quantity        Int
  isGround        Boolean
  // size            String
  coffeeProductId String
  coffeeProduct   CoffeeProducts @relation(fields: [coffeeProductId], references: [id])
  orderHistoryId  String
  orderHistory    OrderHistory   @relation(fields: [orderHistoryId], references: [id])
}
